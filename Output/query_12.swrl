Predicate(?pred) ^
hasPredicateDescription(?pred, ?desc) ^
swrlb:substringBefore(?and0, ?desc, " And ") ^
swrlb:substringBefore(?or0, ?and0, " Or ") ^
ComparisonOperator(?comp1) ^
hasTokenDescription(?comp1, ?dComp1) ^
swrlb:contains(?desc, ?dComp1) ^
swrlb:tokenize(?op1, ?and0, " ") ^
swrlb:stringEqualIgnoreCase(?dComp1, ?op1) ^
swrlx:makeOWLThing(?simple1, ?and0) ^
Column(?col1) ^
hasColumnName(?col1, ?nameCol1) ^
swrlb:contains(?desc, ?nameCol1) ^
Column(?col2) ^
hasColumnName(?col2, ?nameCol2) ^
swrlb:contains(?desc, ?nameCol2) ^
swrlb:substringAfter(?and1, ?desc, " And ") ^
swrlb:substringBefore(?and0, ?and1, " And ") ^
ComparisonOperator(?comp2) ^
hasTokenDescription(?comp2, ?dComp2) ^
swrlb:contains(?desc, ?dComp2) ^
swrlb:tokenize(?op2, ?and1, " ") ^
swrlb:stringEqualIgnoreCase(?dComp2, ?op2) ^
swrlx:makeOWLThing(?simple2, ?and1) ^
Column(?col3) ^
hasColumnName(?col3, ?nameCol3) ^
swrlb:contains(?desc, ?nameCol3) ^
swrlb:substringAfter(?lit1, ?simple2, ?dcomp2) ^
hasLiteralDescription(?lit1, ?dLit1) ^
swrlb:contains(?desc, ?dLit1) ^
swrlx:makeOWLThing(?lit1, ?simple2) ^
swrlb:substringAfter(?and1, ?desc, " And ") ^
swrlb:substringAfter(?and2, ?and1, " And ") ^
swrlb:substringBefore(?and0, ?and2, " And ") ^
ComparisonOperator(?comp3) ^
hasTokenDescription(?comp3, ?dComp3) ^
swrlb:contains(?desc, ?dComp3) ^
swrlb:tokenize(?op3, ?and2, " ") ^
swrlb:stringEqualIgnoreCase(?dComp3, ?op3) ^
swrlx:makeOWLThing(?simple3, ?and2) ^
Column(?col4) ^
hasColumnName(?col4, ?nameCol4) ^
swrlb:contains(?desc, ?nameCol4) ^
swrlb:substringAfter(?lit2, ?simple3, ?dcomp3) ^
hasLiteralDescription(?lit2, ?dLit2) ^
swrlb:contains(?desc, ?dLit2) ^
swrlx:makeOWLThing(?lit2, ?simple3)
-> componentOfPredicate(?and0, ?pred) ^
ExpressionObject(?comp1) ^
componentOfSimpExp(?comp1, ?simple1) ^
componentOfSimpExp(?simple1, ?and0) ^
SimpleExpression(?simple1) ^
ReferencedColumn(?col1) ^
ExpressionObject(?col1) ^
componentOfSimpExp(?col1, ?simple1) ^
ReferencedColumn(?col2) ^
ExpressionObject(?col2) ^
componentOfSimpExp(?col2, ?simple1) ^
componentOfPredicate(?and1, ?pred) ^
ExpressionObject(?comp2) ^
componentOfSimpExp(?comp2, ?simple2) ^
componentOfSimpExp(?simple2, ?and1) ^
SimpleExpression(?simple2) ^
ReferencedColumn(?col3) ^
ExpressionObject(?col3) ^
componentOfSimpExp(?col3, ?simple2) ^
Literal(?lit1) ^
componentOfSimpExp(?lit1, ?simple2) ^
ExpressionObject(?lit1) ^
componentOfPredicate(?and2, ?pred) ^
ExpressionObject(?comp3) ^
componentOfSimpExp(?comp3, ?simple3) ^
componentOfSimpExp(?simple3, ?and2) ^
SimpleExpression(?simple3) ^
ReferencedColumn(?col4) ^
ExpressionObject(?col4) ^
componentOfSimpExp(?col4, ?simple3) ^
Literal(?lit2) ^
componentOfSimpExp(?lit2, ?simple3) ^
ExpressionObject(?lit2)